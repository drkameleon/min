#!/usr/bin/env min

"_helpers" load 
'helpers import

(
  :target-os
  :variant
  " " :d-variant
  "min" :o-variant
  (variant length 0 >) (
    "-d:$# " (variant) =% @d-variant
    "$#min" (variant) =% @o-variant
  ) when
  "nim" required
  "Building $# - $# (x64)" (o-variant target-os) =% notice
  "nim c -d:release --cpu:amd64 --os:$# $#-o:$# min" (target-os d-variant o-variant) =% puts !
  {}
    target-os %os
    config /version %version
    o-variant %exe
  pack
) :cz
(
  :vdata 
  vdata /exe :exe
  (vdata /os "windows" ==) ("$#.exe" (exe) =% @exe) when
  "$exe:_v$version:_$os:_x64.zip" :fn
  fn vdata dpairs % ":" "" replace @fn
  "Compressing: $#" (fn) =% notice
  (exe) => fn zip
) :pack

(
  "hastyscribe" required
  "Building - guide" notice
  "hastyscribe Min_DeveloperGuide.md --field/version=$#" (version) =% !
) :build-guide
(
  "hastysite" required 
  "Building - site" notice
  "cd site && hastysite build && cd .." !
) :build-site
(
  config /version :min-version
  "tasks/templates/min.vim" fread :template
  timestamp "dd MMM YYYY" tformat :date
  min-symbols " " join :symbols
  "min.vim" :out-file
  "Building - min.vim" notice
  template ("date" date "version" min-version "symbols" symbols) =% out-file fwrite 
) :build-vim

; Module symbols
{}
(
  "lite" os cz
) %lite
(
  "mini" os cz
) %mini
(
  "" os cz
) %default
(
  "" "linux" cz
) %linux
(
  "lite" "linux" cz
) %linux-lite
(
  "mini" "linux" cz
) %linux-mini
(
  "" "macosx" cz
) %macosx
(
  "lite" "macosx" cz
) %macosx-lite
(
  "mini" "macosx" cz
) %macosx-mini
(
  "" "windows" cz
) %windows
(
  "lite" "windows" cz
) %windows-lite
(
  "mini" "windows" cz
) %windows-mini
'build-guide %guide
'build-site %site
(
  build-guide
  build-site
) %docs
(
  build-vim
) %vim
+build-tasks
